{"mappings":"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","sources":["<anon>","src/js/authentication.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $jy3SA = parcelRequire(\"jy3SA\");\n//this file is used for sign up, login and password reset so i need to check which is happening\nconst $c4695332e7f665f1$var$login = document.getElementById(\"login\");\nconst $c4695332e7f665f1$var$signup = document.getElementById(\"signup\");\nconst $c4695332e7f665f1$var$passwordReset = document.getElementById(\"password-reset\");\nconst $c4695332e7f665f1$var$passwordForgot = document.getElementById(\"forgot-password\");\nconst $c4695332e7f665f1$var$message = document.getElementById(\"message\");\nif ($c4695332e7f665f1$var$login) $c4695332e7f665f1$var$login.addEventListener(\"submit\", async (event)=>{\n    event.preventDefault();\n    const email = document.getElementById(\"email\").value;\n    const password = document.getElementById(\"password\").value;\n    const { data: data, error: error } = await (0, $jy3SA.supabase).auth.signInWithPassword({\n        email: email,\n        password: password\n    });\n    if (error) {\n        $c4695332e7f665f1$var$message.textContent = error.message;\n        console.log(error.message);\n    } else {\n        window.location.href = \"./index.html\";\n        console.log(data); // Handle user data\n    }\n});\nif ($c4695332e7f665f1$var$signup) document.getElementById(\"signup\").addEventListener(\"submit\", async (event)=>{\n    event.preventDefault();\n    const email = document.getElementById(\"email\").value;\n    const password = document.getElementById(\"password\").value;\n    const passwordConf = document.getElementById(\"password-conf\").value;\n    const username = document.getElementById(\"username\").value;\n    if (password !== passwordConf) {\n        $c4695332e7f665f1$var$message.textContent = \"passwords don't match...\";\n        return;\n    }\n    try {\n        var { data: data, error: error } = await (0, $jy3SA.supabase).auth.signUp({\n            email: email,\n            password: password\n        });\n        //there was an error with user creation\n        if (error && error.code === \"user_already_exists\") {\n            $c4695332e7f665f1$var$accountExists();\n            return;\n        }\n        //once user is cresated sign them in add their chosen username to the profiles table\n        var { data: data, error: error } = await (0, $jy3SA.supabase).auth.signInWithPassword({\n            email: email,\n            password: password\n        });\n        //there was an error with user login\n        if (error) {\n            console.log(error.message);\n            return;\n        }\n        await $c4695332e7f665f1$var$CreateNewUser(username);\n        window.location.href = \"../login.html\";\n    } catch (err) {\n        $c4695332e7f665f1$var$message.textContent = \"Please make sure you entered a valid email adress.\";\n        console.error(err);\n    }\n});\nif (passwordForget) $c4695332e7f665f1$var$passwordReset.addEventListener(\"submit\", async (event)=>{\n    event.preventDefault();\n    const email = document.getElementById(\"email\").value;\n    const { data: data, error: error } = await (0, $jy3SA.supabase).auth.resetPasswordForEmail(email, {\n        redirectTo: 'https://gogogadgetgithub.github.io/portfolio/resetPassword.html'\n    });\n    if (error) console.log(error.message);\n    else console.log(\"no error email should have been sent\");\n});\nif ($c4695332e7f665f1$var$passwordReset) $c4695332e7f665f1$var$passwordReset.addEventListener(\"submit\", async (event)=>{\n    event.preventDefault();\n    const password = document.getElementById(\"password\").value;\n    const passwordConf = document.getElementById(\"password-conf\").value;\n    if (password !== passwordConf) {\n        $c4695332e7f665f1$var$message.textContent = \"Passwords don't match...\";\n        return;\n    }\n    const { data: data, error: error } = await (0, $jy3SA.supabase).auth.updateUser({\n        password: password\n    });\n    if (error) console.log(error.message);\n    else {\n        console.log(\"no error, passowrd should have been reset\");\n        window.location.href = \"../login.html\";\n    }\n});\nasync function $c4695332e7f665f1$var$CreateNewUser(username) {\n    const { error: error } = await (0, $jy3SA.supabase).from('profiles').insert({\n        username: username\n    });\n    if (error) console.log(error.message);\n}\nfunction $c4695332e7f665f1$var$accountExists() {\n    message.innerContenr = \"\";\n    const message = document.getElementById(\"message\");\n    const p = document.createElement(\"p\");\n    const a = document.createElement(\"a\");\n    p.textContent = \"User already exists \";\n    a.textContent = \"Login\";\n    a.href = \"../login.html\";\n    message.appendChild(p);\n    message.appendChild(a);\n}\n\n\n//# sourceMappingURL=login.2856d3ec.js.map\n","import { supabase } from \"./supabaseClient.js\";\n\n//this file is used for sign up, login and password reset so i need to check which is happening\nconst login = document.getElementById(\"login\");\nconst signup = document.getElementById(\"signup\");\nconst passwordReset = document.getElementById(\"password-reset\");\nconst passwordForgot = document.getElementById(\"forgot-password\");\nconst message = document.getElementById(\"message\");\n\nif (login){\n  login.addEventListener(\"submit\", async (event) => {\n    event.preventDefault();\n\n    const email = document.getElementById(\"email\").value;\n    const password = document.getElementById(\"password\").value;\n\n    const { data, error } = await supabase.auth.signInWithPassword({\n      email,\n      password,\n    });\n\n    if (error) {\n      message.textContent = error.message;\n      console.log(error.message)\n    } else {\n      window.location.href = \"./index.html\";\n      console.log(data); // Handle user data\n    }\n\n  })\n}\n\nif (signup){\n  document.getElementById(\"signup\").addEventListener(\"submit\", async (event) => {\n    event.preventDefault();\n\n    const email = document.getElementById(\"email\").value;\n    const password = document.getElementById(\"password\").value;\n    const passwordConf = document.getElementById(\"password-conf\").value;\n    const username = document.getElementById(\"username\").value;\n\n    if (password !== passwordConf) {\n      message.textContent = \"passwords don't match...\"\n      return\n    }\n\n    try {\n\n      var { data, error } = await supabase.auth.signUp({\n        email,\n        password,\n      })\n\n      //there was an error with user creation\n      if (error && error.code === \"user_already_exists\") {\n        accountExists()\n        return\n      }\n\n      //once user is cresated sign them in add their chosen username to the profiles table\n      var { data, error } = await supabase.auth.signInWithPassword({\n        email,\n        password,\n      })\n\n      //there was an error with user login\n      if (error){\n        console.log(error.message)\n        return\n      }\n\n      await CreateNewUser(username);\n      window.location.href = \"../login.html\";\n\n    } catch (err) {\n      message.textContent = \"Please make sure you entered a valid email adress.\"\n      console.error(err)\n    }\n\n  })\n}\n\nif (passwordForget) {\n  passwordReset.addEventListener(\"submit\", async (event) => {\n    event.preventDefault();\n\n    const email = document.getElementById(\"email\").value;\n\n    const {data, error } = await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo: 'https://gogogadgetgithub.github.io/portfolio/resetPassword.html'\n    })\n\n    if (error) {\n      console.log(error.message)\n    }\n    else {\n      console.log(\"no error email should have been sent\")\n    }\n  })\n}\n\nif (passwordReset) {\n  passwordReset.addEventListener(\"submit\", async (event) => {\n    event.preventDefault();\n\n    const password = document.getElementById(\"password\").value;\n    const passwordConf = document.getElementById(\"password-conf\").value;\n\n    if (password !== passwordConf) {\n      message.textContent = \"Passwords don't match...\"\n      return\n    }\n\n    const {data, error } = await supabase.auth.updateUser({\n      password: password\n    })\n\n    if (error) {\n      console.log(error.message)\n    }\n    else {\n      console.log(\"no error, passowrd should have been reset\")\n      window.location.href = \"../login.html\"\n    }\n  })\n}\n\nasync function CreateNewUser(username) {\n  const {error} = await supabase\n    .from('profiles')\n    .insert({username:username})\n  if (error){\n    console.log(error.message)\n  }\n}\n\nfunction accountExists() {\n  message.innerContenr = \"\"\n  const message = document.getElementById(\"message\")\n  const p = document.createElement(\"p\")\n  const a = document.createElement(\"a\")\n  p.textContent = \"User already exists \"\n  a.textContent = \"Login\"\n  a.href = \"../login.html\"\n  message.appendChild(p)\n  message.appendChild(a)\n}\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$jy3SA","$c4695332e7f665f1$var$login","document","getElementById","$c4695332e7f665f1$var$signup","$c4695332e7f665f1$var$passwordReset","$c4695332e7f665f1$var$message","$c4695332e7f665f1$var$CreateNewUser","username","error","supabase","from","insert","console","log","message","addEventListener","event","preventDefault","email","value","password","data","auth","signInWithPassword","textContent","window","location","href","passwordConf","signUp","$c4695332e7f665f1$var$accountExists","innerContenr","p","createElement","a","appendChild","passwordForget","resetPasswordForEmail","redirectTo","updateUser"],"version":3,"file":"login.2856d3ec.js.map"}